services:
  client:
    image: node:22
    container_name: client
    ports:
      - "7689:7689"
    working_dir: /app/PawPawsy
    volumes:
      - ./PawPawsy:/app/PawPawsy # Mount local source code for hot-reloading
      # - /app/PawPawsy/node_modules # Use an anonymous volume to preserve node_modules from the image
    command: sh -c 'if [ ! -d "node_modules" ]; then npm install -g npm@11.6.1 && npm install; fi; npm run dev -- --host 0.0.0.0'
    # env_file:
    #   - ./PawPawsy/.env
  server:
    image: node:22
    container_name: server
    ports:
      - "5000:5000"
    volumes:
      - ./express_api:/app/express_api # Mount local source code for hot-reloading
      # - /app/express_api/node_modules # Use an anonymous volume to preserve node_modules from the image
    env_file:
      - ./express_api/.env
    working_dir: /app/express_api
    command: sh -c 'if [ ! -d "node_modules" ]; then npm install -g npm@11.6.1 && npm install; fi; npm run dev'
    depends_on:
      - mongo

  mongo:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-data:/data/db
      # - ./server/mongo-init:/docker-entrypoint-initdb.d

volumes:
  mongo-data:
